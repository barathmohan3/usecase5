name: Provision Infra using Terraform via EC2

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform (apply/destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: write

jobs:
  provision:
    name: Terraform Infra via EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::650251701672:role/s3-github
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18   

      - name: Install dependencies and create ZIP
        run: |
          cd file/js
          npm install 
          zip -r ../../file/js/image_resizer.zip .

      - name: Terraform format
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init

      - name: Install Checkov
        run: |
          python3 -m pip install --upgrade pip
          pip install checkov

      - name: Run Checkov Scan
        run: checkov -d ./ --skip-path .github/* --soft-fail  

      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: Run tflint with custom config
        run: |
          echo "Using custom rules from .tflint.hcl"
          tflint --config=./.tflint.hcl
        continue-on-error: true

      - name: Generate Terraform Docs and Update README
        run: |
          curl -sLo terraform-docs https://github.com/terraform-docs/terraform-docs/releases/download/v0.17.0/terraform-docs-v0.17.0-linux-amd64
          chmod +x terraform-docs
          ./terraform-docs markdown table . > TEMP_DOC.md
          echo -e "\n## Terraform Module Documentation\n" >> README.md
          cat TEMP_DOC.md >> README.md
        continue-on-error: true

      - name: Terraform plan
        run: terraform plan

      - name: Terraform Apply or Destroy
        run: |
          if [[ "${{ github.event.inputs.action }}" == "destroy" ]]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve
          fi
